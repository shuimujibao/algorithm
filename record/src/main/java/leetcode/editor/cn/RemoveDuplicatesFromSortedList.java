package leetcode.editor.cn;

//ÁªôÂÆö‰∏Ä‰∏™ÊéíÂ∫èÈìæË°®ÔºåÂà†Èô§ÊâÄÊúâÈáçÂ§çÁöÑÂÖÉÁ¥†Ôºå‰ΩøÂæóÊØè‰∏™ÂÖÉÁ¥†Âè™Âá∫Áé∞‰∏ÄÊ¨°„ÄÇ 
//
// Á§∫‰æã 1: 
//
// ËæìÂÖ•: 1->1->2
//ËæìÂá∫: 1->2
// 
//
// Á§∫‰æã 2: 
//
// ËæìÂÖ•: 1->1->2->3->3
//ËæìÂá∫: 1->2->3 
// Related Topics ÈìæË°® 
// üëç 428 üëé 0

public class RemoveDuplicatesFromSortedList {
    public static void main(String[] args) {
        Solution solution = new RemoveDuplicatesFromSortedList().new Solution();

    }

//leetcode submit region begin(Prohibit modification and deletion)

    /**
     * Definition for singly-linked list.
     * public class ListNode {
     * int val;
     * ListNode next;
     * ListNode(int x) { val = x; }
     * }
     */
    class Solution {
        public ListNode deleteDuplicates(ListNode head) {
            if (head == null || head.next == null) return head;

            ListNode cur = head.next;
            ListNode curPrev = head;

            while (cur != null) {
                if (cur.val == curPrev.val) {
                    curPrev.next = cur.next;
                    cur = curPrev.next;
                } else {
                    curPrev = cur;
                    cur = cur.next;
                }
            }
            return head;
        }
    }
//leetcode submit region end(Prohibit modification and deletion)

}